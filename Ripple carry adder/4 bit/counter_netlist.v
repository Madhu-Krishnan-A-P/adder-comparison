
// Generated by Cadence Genus(TM) Synthesis Solution 20.11-s111_1
// Generated on: Dec 12 2024 17:00:10 IST (Dec 12 2024 11:30:10 UTC)

// Verification Directory fv/RCA 

module fulladder(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  ADDFX1 g47(.A (x), .B (y), .CI (z), .CO (carry), .S (sum));
endmodule

module fulladder_6(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  ADDFHX1 g45(.A (x), .B (y), .CI (z), .CO (carry), .S (sum));
endmodule

module fulladder_5(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0;
  AO22X1 g41(.A0 (n_0), .A1 (z), .B0 (y), .B1 (x), .Y (carry));
  XOR2X1 g42(.A (z), .B (n_0), .Y (sum));
  CLKXOR2X1 g2(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_4(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_3;
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_3));
  XOR2XL g45(.A (z), .B (n_3), .Y (sum));
  AO22XL g46(.A0 (n_3), .A1 (z), .B0 (y), .B1 (x), .Y (carry));
endmodule

module RCA(clk, reset, A_in, B_in, Cin_in, SUM_out, Cout_out);
  input clk, reset, Cin_in;
  input [3:0] A_in, B_in;
  output [3:0] SUM_out;
  output Cout_out;
  wire clk, reset, Cin_in;
  wire [3:0] A_in, B_in;
  wire [3:0] SUM_out;
  wire Cout_out;
  wire [3:0] A;
  wire [3:0] B;
  wire [3:0] SUM_internal;
  wire C1, C2, C3, Cin, Cout_internal, n_0;
  fulladder adder0(.x (A[0]), .y (B[0]), .z (Cin), .sum
       (SUM_internal[0]), .carry (C1));
  fulladder_6 adder1(.x (A[1]), .y (B[1]), .z (C1), .sum
       (SUM_internal[1]), .carry (C2));
  fulladder_5 adder2(.x (A[2]), .y (B[2]), .z (C2), .sum
       (SUM_internal[2]), .carry (C3));
  fulladder_4 adder3(.x (A[3]), .y (B[3]), .z (C3), .sum
       (SUM_internal[3]), .carry (Cout_internal));
  DFFRHQX1 \SUM_out_reg[3] (.RN (n_0), .CK (clk), .D (SUM_internal[3]),
       .Q (SUM_out[3]));
  DFFRHQX1 Cout_out_reg(.RN (n_0), .CK (clk), .D (Cout_internal), .Q
       (Cout_out));
  DFFRHQX1 \SUM_out_reg[2] (.RN (n_0), .CK (clk), .D (SUM_internal[2]),
       .Q (SUM_out[2]));
  DFFRHQX1 \SUM_out_reg[1] (.RN (n_0), .CK (clk), .D (SUM_internal[1]),
       .Q (SUM_out[1]));
  DFFRHQX1 \SUM_out_reg[0] (.RN (n_0), .CK (clk), .D (SUM_internal[0]),
       .Q (SUM_out[0]));
  DFFRHQX1 \B_reg[3] (.RN (n_0), .CK (clk), .D (B_in[3]), .Q (B[3]));
  DFFRHQX1 \A_reg[3] (.RN (n_0), .CK (clk), .D (A_in[3]), .Q (A[3]));
  DFFRHQX1 \A_reg[2] (.RN (n_0), .CK (clk), .D (A_in[2]), .Q (A[2]));
  DFFRHQX1 \B_reg[2] (.RN (n_0), .CK (clk), .D (B_in[2]), .Q (B[2]));
  DFFRHQX1 Cin_reg(.RN (n_0), .CK (clk), .D (Cin_in), .Q (Cin));
  DFFRHQX1 \B_reg[1] (.RN (n_0), .CK (clk), .D (B_in[1]), .Q (B[1]));
  DFFRHQX1 \A_reg[1] (.RN (n_0), .CK (clk), .D (A_in[1]), .Q (A[1]));
  DFFRHQX1 \A_reg[0] (.RN (n_0), .CK (clk), .D (A_in[0]), .Q (A[0]));
  DFFRHQX1 \B_reg[0] (.RN (n_0), .CK (clk), .D (B_in[0]), .Q (B[0]));
  INVXL g21(.A (reset), .Y (n_0));
endmodule

