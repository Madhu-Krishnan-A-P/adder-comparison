
// Generated by Cadence Genus(TM) Synthesis Solution 20.11-s111_1
// Generated on: Dec 12 2024 17:36:37 IST (Dec 12 2024 12:06:37 UTC)

// Verification Directory fv/RCA 

module fulladder(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2, n_3;
  OAI21X1 g83(.A0 (n_0), .A1 (n_2), .B0 (n_1), .Y (carry));
  MXI2XL g84(.A (n_0), .B (z), .S0 (n_3), .Y (sum));
  CLKXOR2X1 g85(.A (x), .B (y), .Y (n_3));
  NOR2XL g86(.A (x), .B (y), .Y (n_2));
  NAND2XL g87(.A (x), .B (y), .Y (n_1));
  CLKINVX1 g88(.A (z), .Y (n_0));
endmodule

module fulladder_126(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_3, n_10;
  OAI2BB1X1 g44(.A0N (n_10), .A1N (z), .B0 (n_3), .Y (carry));
  XOR2XL g45(.A (n_10), .B (n_0), .Y (sum));
  NAND2XL g47(.A (x), .B (y), .Y (n_3));
  DLY2X1 g50(.A (z), .Y (n_0));
  CLKXOR2X1 g2(.A (y), .B (x), .Y (n_10));
endmodule

module fulladder_125(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_3, n_7, n_12;
  XOR2XL g45(.A (n_12), .B (n_7), .Y (sum));
  DLY2X1 g49(.A (z), .Y (n_7));
  NAND2X1 g2(.A (n_12), .B (z), .Y (n_3));
  XOR2XL g56(.A (x), .B (y), .Y (n_12));
  OAI2BB1X2 g57(.A0N (x), .A1N (y), .B0 (n_3), .Y (carry));
endmodule

module fulladder_124(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_3, n_5, n_6, n_12;
  NAND2X2 g44(.A (n_6), .B (n_3), .Y (carry));
  XOR2XL g45(.A (n_12), .B (n_5), .Y (sum));
  NAND2XL g48(.A (x), .B (y), .Y (n_6));
  DLY2X1 g50(.A (z), .Y (n_5));
  NAND2X1 g2(.A (n_12), .B (z), .Y (n_3));
  XOR2XL g57(.A (x), .B (y), .Y (n_12));
endmodule

module fulladder_123(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_3, n_5, n_6, n_12;
  NAND2X2 g44(.A (n_6), .B (n_3), .Y (carry));
  XOR2XL g45(.A (n_12), .B (n_5), .Y (sum));
  NAND2XL g48(.A (x), .B (y), .Y (n_6));
  DLY2X1 g50(.A (z), .Y (n_5));
  NAND2X1 g2(.A (n_12), .B (z), .Y (n_3));
  XOR2XL g57(.A (x), .B (y), .Y (n_12));
endmodule

module fulladder_122(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X2 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (n_1), .B (z), .Y (sum));
  NAND2X2 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_121(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X2 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (n_1), .B (z), .Y (sum));
  NAND2X2 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_120(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X1 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (n_1), .B (z), .Y (sum));
  NAND2X1 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_119(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2, n_3;
  NAND2X2 g44(.A (n_1), .B (n_3), .Y (carry));
  XOR2XL g45(.A (n_2), .B (n_0), .Y (sum));
  NAND2X1 g46(.A (n_2), .B (z), .Y (n_3));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_2));
  NAND2XL g48(.A (x), .B (y), .Y (n_1));
  DLY2X1 g49(.A (z), .Y (n_0));
endmodule

module fulladder_118(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X2 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (n_1), .B (z), .Y (sum));
  NAND2X2 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_117(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X1 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (n_1), .B (z), .Y (sum));
  NAND2X1 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_116(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2, n_3;
  NAND2X2 g44(.A (n_1), .B (n_3), .Y (carry));
  XOR2XL g45(.A (n_2), .B (n_0), .Y (sum));
  NAND2X1 g46(.A (n_2), .B (z), .Y (n_3));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_2));
  NAND2XL g48(.A (x), .B (y), .Y (n_1));
  DLY2X1 g49(.A (z), .Y (n_0));
endmodule

module fulladder_115(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X2 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (n_1), .B (z), .Y (sum));
  NAND2X2 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_114(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X2 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (n_1), .B (z), .Y (sum));
  NAND2X2 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_113(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X2 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (n_1), .B (z), .Y (sum));
  NAND2X1 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_112(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g44(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g45(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g46(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_111(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X2 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (z), .B (n_1), .Y (sum));
  NAND2X1 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_110(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  NAND2X2 g44(.A (n_0), .B (n_2), .Y (carry));
  XOR2XL g45(.A (n_1), .B (z), .Y (sum));
  NAND2X2 g46(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_1));
  NAND2XL g48(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_109(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g44(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g45(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g46(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_108(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X2 g44(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g45(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g46(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_107(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X2 g44(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g45(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g46(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_106(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X2 g44(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g45(.A (n_0), .B (z), .Y (sum));
  NAND2X2 g46(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_105(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X2 g44(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g45(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g46(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_104(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X2 g44(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g45(.A (n_0), .B (z), .Y (sum));
  NAND2X2 g46(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_103(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X2 g44(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g45(.A (n_0), .B (z), .Y (sum));
  NAND2X2 g46(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g47(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_102(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (z), .B (n_0), .Y (sum));
  NAND2X1 g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_101(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  OAI21X2 g44(.A0 (n_2), .A1 (n_0), .B0 (n_1), .Y (carry));
  MXI2XL g45(.A (z), .B (n_0), .S0 (n_2), .Y (sum));
  XNOR2X1 g46(.A (x), .B (y), .Y (n_2));
  NAND2XL g47(.A (x), .B (y), .Y (n_1));
  CLKINVX1 g48(.A (z), .Y (n_0));
endmodule

module fulladder_100(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1, n_2;
  OAI21X1 g44(.A0 (n_2), .A1 (n_0), .B0 (n_1), .Y (carry));
  MXI2XL g45(.A (z), .B (n_0), .S0 (n_2), .Y (sum));
  XNOR2X1 g46(.A (x), .B (y), .Y (n_2));
  NAND2XL g47(.A (x), .B (y), .Y (n_1));
  CLKINVX1 g48(.A (z), .Y (n_0));
endmodule

module fulladder_99(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_98(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_97(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_96(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_95(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_94(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_93(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_92(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_91(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (n_1), .A1N (z), .B0 (n_0), .Y (carry));
  XOR2XL g42(.A (n_1), .B (z), .Y (sum));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_1));
  NAND2XL g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_90(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (n_1), .A1N (z), .B0 (n_0), .Y (carry));
  XOR2XL g42(.A (n_1), .B (z), .Y (sum));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_1));
  NAND2XL g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_89(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (n_1), .A1N (z), .B0 (n_0), .Y (carry));
  XOR2XL g42(.A (n_1), .B (z), .Y (sum));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_1));
  NAND2XL g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_88(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (n_1), .A1N (z), .B0 (n_0), .Y (carry));
  XOR2XL g42(.A (n_1), .B (z), .Y (sum));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_1));
  NAND2XL g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_87(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (n_1), .A1N (z), .B0 (n_0), .Y (carry));
  XOR2XL g42(.A (n_1), .B (z), .Y (sum));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_1));
  NAND2XL g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_86(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_85(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_84(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_83(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_82(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_81(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2X1 g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_80(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_79(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_78(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_1), .Y (carry));
  XOR2XL g42(.A (n_0), .B (z), .Y (sum));
  NAND2XL g43(.A (n_0), .B (z), .Y (n_1));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_77(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (n_1), .A1N (z), .B0 (n_0), .Y (carry));
  XOR2XL g42(.A (n_1), .B (z), .Y (sum));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_1));
  NAND2XL g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_76(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (n_1), .A1N (z), .B0 (n_0), .Y (carry));
  XOR2XL g42(.A (n_1), .B (z), .Y (sum));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_1));
  NAND2XL g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_75(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_0, n_1;
  OAI2BB1X1 g41(.A0N (n_1), .A1N (z), .B0 (n_0), .Y (carry));
  XOR2XL g42(.A (n_1), .B (z), .Y (sum));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_1));
  NAND2XL g44(.A (x), .B (y), .Y (n_0));
endmodule

module fulladder_74(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (n_2), .A1N (z), .B0 (n_1), .Y (carry));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_2));
  NAND2XL g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g2(.A (z), .B (n_2), .Y (sum));
endmodule

module fulladder_73(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (n_2), .A1N (z), .B0 (n_1), .Y (carry));
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_2));
  NAND2XL g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g2(.A (z), .B (n_2), .Y (sum));
endmodule

module fulladder_72(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_2), .Y (carry));
  NAND2XL g43(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g2(.A (z), .B (n_1), .Y (sum));
endmodule

module fulladder_71(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_2), .Y (carry));
  NAND2XL g43(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g2(.A (z), .B (n_1), .Y (sum));
endmodule

module fulladder_70(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_2), .Y (carry));
  NAND2X1 g43(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g2(.A (z), .B (n_1), .Y (sum));
endmodule

module fulladder_69(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_2), .Y (carry));
  NAND2XL g43(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g2(.A (z), .B (n_1), .Y (sum));
endmodule

module fulladder_68(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_2), .Y (carry));
  NAND2XL g43(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g2(.A (z), .B (n_1), .Y (sum));
endmodule

module fulladder_67(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (y), .A1N (x), .B0 (n_2), .Y (carry));
  NAND2X1 g43(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g2(.A (z), .B (n_1), .Y (sum));
endmodule

module fulladder_66(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_2), .Y (carry));
  NAND2XL g43(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g2(.A (z), .B (n_1), .Y (sum));
endmodule

module fulladder_65(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_1, n_2;
  OAI2BB1X1 g41(.A0N (x), .A1N (y), .B0 (n_2), .Y (carry));
  NAND2XL g43(.A (n_1), .B (z), .Y (n_2));
  CLKXOR2X1 g44(.A (x), .B (y), .Y (n_1));
  XOR2XL g47(.A (z), .B (n_1), .Y (sum));
endmodule

module fulladder_64(x, y, z, sum, carry);
  input x, y, z;
  output sum, carry;
  wire x, y, z;
  wire sum, carry;
  wire n_2;
  CLKXOR2X1 g43(.A (x), .B (y), .Y (n_2));
  XOR2XL g2(.A (z), .B (n_2), .Y (sum));
  AO22XL g46(.A0 (n_2), .A1 (z), .B0 (x), .B1 (y), .Y (carry));
endmodule

module RCA(clk, reset, A_in, B_in, Cin_in, SUM_out, Cout_out);
  input clk, reset, Cin_in;
  input [63:0] A_in, B_in;
  output [63:0] SUM_out;
  output Cout_out;
  wire clk, reset, Cin_in;
  wire [63:0] A_in, B_in;
  wire [63:0] SUM_out;
  wire Cout_out;
  wire [63:0] A;
  wire [63:0] B;
  wire [63:0] SUM_internal;
  wire [63:0] carry;
  wire Cin, n_0;
  fulladder adder0(.x (A[0]), .y (B[0]), .z (Cin), .sum
       (SUM_internal[0]), .carry (carry[0]));
  fulladder_126 adder1(.x (A[1]), .y (B[1]), .z (carry[0]), .sum
       (SUM_internal[1]), .carry (carry[1]));
  fulladder_125 adder2(.x (A[2]), .y (B[2]), .z (carry[1]), .sum
       (SUM_internal[2]), .carry (carry[2]));
  fulladder_124 adder3(.x (A[3]), .y (B[3]), .z (carry[2]), .sum
       (SUM_internal[3]), .carry (carry[3]));
  fulladder_123 adder4(.x (A[4]), .y (B[4]), .z (carry[3]), .sum
       (SUM_internal[4]), .carry (carry[4]));
  fulladder_122 adder5(.x (A[5]), .y (B[5]), .z (carry[4]), .sum
       (SUM_internal[5]), .carry (carry[5]));
  fulladder_121 adder6(.x (A[6]), .y (B[6]), .z (carry[5]), .sum
       (SUM_internal[6]), .carry (carry[6]));
  fulladder_120 adder7(.x (A[7]), .y (B[7]), .z (carry[6]), .sum
       (SUM_internal[7]), .carry (carry[7]));
  fulladder_119 adder8(.x (A[8]), .y (B[8]), .z (carry[7]), .sum
       (SUM_internal[8]), .carry (carry[8]));
  fulladder_118 adder9(.x (A[9]), .y (B[9]), .z (carry[8]), .sum
       (SUM_internal[9]), .carry (carry[9]));
  fulladder_117 adder10(.x (A[10]), .y (B[10]), .z (carry[9]), .sum
       (SUM_internal[10]), .carry (carry[10]));
  fulladder_116 adder11(.x (A[11]), .y (B[11]), .z (carry[10]), .sum
       (SUM_internal[11]), .carry (carry[11]));
  fulladder_115 adder12(.x (A[12]), .y (B[12]), .z (carry[11]), .sum
       (SUM_internal[12]), .carry (carry[12]));
  fulladder_114 adder13(.x (A[13]), .y (B[13]), .z (carry[12]), .sum
       (SUM_internal[13]), .carry (carry[13]));
  fulladder_113 adder14(.x (A[14]), .y (B[14]), .z (carry[13]), .sum
       (SUM_internal[14]), .carry (carry[14]));
  fulladder_112 adder15(.x (A[15]), .y (B[15]), .z (carry[14]), .sum
       (SUM_internal[15]), .carry (carry[15]));
  fulladder_111 adder16(.x (A[16]), .y (B[16]), .z (carry[15]), .sum
       (SUM_internal[16]), .carry (carry[16]));
  fulladder_110 adder17(.x (A[17]), .y (B[17]), .z (carry[16]), .sum
       (SUM_internal[17]), .carry (carry[17]));
  fulladder_109 adder18(.x (A[18]), .y (B[18]), .z (carry[17]), .sum
       (SUM_internal[18]), .carry (carry[18]));
  fulladder_108 adder19(.x (A[19]), .y (B[19]), .z (carry[18]), .sum
       (SUM_internal[19]), .carry (carry[19]));
  fulladder_107 adder20(.x (A[20]), .y (B[20]), .z (carry[19]), .sum
       (SUM_internal[20]), .carry (carry[20]));
  fulladder_106 adder21(.x (A[21]), .y (B[21]), .z (carry[20]), .sum
       (SUM_internal[21]), .carry (carry[21]));
  fulladder_105 adder22(.x (A[22]), .y (B[22]), .z (carry[21]), .sum
       (SUM_internal[22]), .carry (carry[22]));
  fulladder_104 adder23(.x (A[23]), .y (B[23]), .z (carry[22]), .sum
       (SUM_internal[23]), .carry (carry[23]));
  fulladder_103 adder24(.x (A[24]), .y (B[24]), .z (carry[23]), .sum
       (SUM_internal[24]), .carry (carry[24]));
  fulladder_102 adder25(.x (A[25]), .y (B[25]), .z (carry[24]), .sum
       (SUM_internal[25]), .carry (carry[25]));
  fulladder_101 adder26(.x (A[26]), .y (B[26]), .z (carry[25]), .sum
       (SUM_internal[26]), .carry (carry[26]));
  fulladder_100 adder27(.x (A[27]), .y (B[27]), .z (carry[26]), .sum
       (SUM_internal[27]), .carry (carry[27]));
  fulladder_99 adder28(.x (A[28]), .y (B[28]), .z (carry[27]), .sum
       (SUM_internal[28]), .carry (carry[28]));
  fulladder_98 adder29(.x (A[29]), .y (B[29]), .z (carry[28]), .sum
       (SUM_internal[29]), .carry (carry[29]));
  fulladder_97 adder30(.x (A[30]), .y (B[30]), .z (carry[29]), .sum
       (SUM_internal[30]), .carry (carry[30]));
  fulladder_96 adder31(.x (A[31]), .y (B[31]), .z (carry[30]), .sum
       (SUM_internal[31]), .carry (carry[31]));
  fulladder_95 adder32(.x (A[32]), .y (B[32]), .z (carry[31]), .sum
       (SUM_internal[32]), .carry (carry[32]));
  fulladder_94 adder33(.x (A[33]), .y (B[33]), .z (carry[32]), .sum
       (SUM_internal[33]), .carry (carry[33]));
  fulladder_93 adder34(.x (A[34]), .y (B[34]), .z (carry[33]), .sum
       (SUM_internal[34]), .carry (carry[34]));
  fulladder_92 adder35(.x (A[35]), .y (B[35]), .z (carry[34]), .sum
       (SUM_internal[35]), .carry (carry[35]));
  fulladder_91 adder36(.x (A[36]), .y (B[36]), .z (carry[35]), .sum
       (SUM_internal[36]), .carry (carry[36]));
  fulladder_90 adder37(.x (A[37]), .y (B[37]), .z (carry[36]), .sum
       (SUM_internal[37]), .carry (carry[37]));
  fulladder_89 adder38(.x (A[38]), .y (B[38]), .z (carry[37]), .sum
       (SUM_internal[38]), .carry (carry[38]));
  fulladder_88 adder39(.x (A[39]), .y (B[39]), .z (carry[38]), .sum
       (SUM_internal[39]), .carry (carry[39]));
  fulladder_87 adder40(.x (A[40]), .y (B[40]), .z (carry[39]), .sum
       (SUM_internal[40]), .carry (carry[40]));
  fulladder_86 adder41(.x (A[41]), .y (B[41]), .z (carry[40]), .sum
       (SUM_internal[41]), .carry (carry[41]));
  fulladder_85 adder42(.x (A[42]), .y (B[42]), .z (carry[41]), .sum
       (SUM_internal[42]), .carry (carry[42]));
  fulladder_84 adder43(.x (A[43]), .y (B[43]), .z (carry[42]), .sum
       (SUM_internal[43]), .carry (carry[43]));
  fulladder_83 adder44(.x (A[44]), .y (B[44]), .z (carry[43]), .sum
       (SUM_internal[44]), .carry (carry[44]));
  fulladder_82 adder45(.x (A[45]), .y (B[45]), .z (carry[44]), .sum
       (SUM_internal[45]), .carry (carry[45]));
  fulladder_81 adder46(.x (A[46]), .y (B[46]), .z (carry[45]), .sum
       (SUM_internal[46]), .carry (carry[46]));
  fulladder_80 adder47(.x (A[47]), .y (B[47]), .z (carry[46]), .sum
       (SUM_internal[47]), .carry (carry[47]));
  fulladder_79 adder48(.x (A[48]), .y (B[48]), .z (carry[47]), .sum
       (SUM_internal[48]), .carry (carry[48]));
  fulladder_78 adder49(.x (A[49]), .y (B[49]), .z (carry[48]), .sum
       (SUM_internal[49]), .carry (carry[49]));
  fulladder_77 adder50(.x (A[50]), .y (B[50]), .z (carry[49]), .sum
       (SUM_internal[50]), .carry (carry[50]));
  fulladder_76 adder51(.x (A[51]), .y (B[51]), .z (carry[50]), .sum
       (SUM_internal[51]), .carry (carry[51]));
  fulladder_75 adder52(.x (A[52]), .y (B[52]), .z (carry[51]), .sum
       (SUM_internal[52]), .carry (carry[52]));
  fulladder_74 adder53(.x (A[53]), .y (B[53]), .z (carry[52]), .sum
       (SUM_internal[53]), .carry (carry[53]));
  fulladder_73 adder54(.x (A[54]), .y (B[54]), .z (carry[53]), .sum
       (SUM_internal[54]), .carry (carry[54]));
  fulladder_72 adder55(.x (A[55]), .y (B[55]), .z (carry[54]), .sum
       (SUM_internal[55]), .carry (carry[55]));
  fulladder_71 adder56(.x (A[56]), .y (B[56]), .z (carry[55]), .sum
       (SUM_internal[56]), .carry (carry[56]));
  fulladder_70 adder57(.x (A[57]), .y (B[57]), .z (carry[56]), .sum
       (SUM_internal[57]), .carry (carry[57]));
  fulladder_69 adder58(.x (A[58]), .y (B[58]), .z (carry[57]), .sum
       (SUM_internal[58]), .carry (carry[58]));
  fulladder_68 adder59(.x (A[59]), .y (B[59]), .z (carry[58]), .sum
       (SUM_internal[59]), .carry (carry[59]));
  fulladder_67 adder60(.x (A[60]), .y (B[60]), .z (carry[59]), .sum
       (SUM_internal[60]), .carry (carry[60]));
  fulladder_66 adder61(.x (A[61]), .y (B[61]), .z (carry[60]), .sum
       (SUM_internal[61]), .carry (carry[61]));
  fulladder_65 adder62(.x (A[62]), .y (B[62]), .z (carry[61]), .sum
       (SUM_internal[62]), .carry (carry[62]));
  fulladder_64 adder63(.x (A[63]), .y (B[63]), .z (carry[62]), .sum
       (SUM_internal[63]), .carry (carry[63]));
  DFFRHQX1 Cout_out_reg(.RN (n_0), .CK (clk), .D (carry[63]), .Q
       (Cout_out));
  DFFRHQX1 \SUM_out_reg[63] (.RN (n_0), .CK (clk), .D
       (SUM_internal[63]), .Q (SUM_out[63]));
  DFFRHQX1 \SUM_out_reg[62] (.RN (n_0), .CK (clk), .D
       (SUM_internal[62]), .Q (SUM_out[62]));
  DFFRHQX1 \SUM_out_reg[61] (.RN (n_0), .CK (clk), .D
       (SUM_internal[61]), .Q (SUM_out[61]));
  DFFRHQX1 \SUM_out_reg[60] (.RN (n_0), .CK (clk), .D
       (SUM_internal[60]), .Q (SUM_out[60]));
  DFFRHQX1 \SUM_out_reg[59] (.RN (n_0), .CK (clk), .D
       (SUM_internal[59]), .Q (SUM_out[59]));
  DFFRHQX1 \SUM_out_reg[58] (.RN (n_0), .CK (clk), .D
       (SUM_internal[58]), .Q (SUM_out[58]));
  DFFRHQX1 \SUM_out_reg[57] (.RN (n_0), .CK (clk), .D
       (SUM_internal[57]), .Q (SUM_out[57]));
  DFFRHQX1 \SUM_out_reg[56] (.RN (n_0), .CK (clk), .D
       (SUM_internal[56]), .Q (SUM_out[56]));
  DFFRHQX1 \SUM_out_reg[55] (.RN (n_0), .CK (clk), .D
       (SUM_internal[55]), .Q (SUM_out[55]));
  DFFRHQX1 \SUM_out_reg[54] (.RN (n_0), .CK (clk), .D
       (SUM_internal[54]), .Q (SUM_out[54]));
  DFFRHQX1 \SUM_out_reg[53] (.RN (n_0), .CK (clk), .D
       (SUM_internal[53]), .Q (SUM_out[53]));
  DFFRHQX1 \SUM_out_reg[52] (.RN (n_0), .CK (clk), .D
       (SUM_internal[52]), .Q (SUM_out[52]));
  DFFRHQX1 \SUM_out_reg[51] (.RN (n_0), .CK (clk), .D
       (SUM_internal[51]), .Q (SUM_out[51]));
  DFFRHQX1 \SUM_out_reg[50] (.RN (n_0), .CK (clk), .D
       (SUM_internal[50]), .Q (SUM_out[50]));
  DFFRHQX1 \SUM_out_reg[49] (.RN (n_0), .CK (clk), .D
       (SUM_internal[49]), .Q (SUM_out[49]));
  DFFRHQX1 \SUM_out_reg[48] (.RN (n_0), .CK (clk), .D
       (SUM_internal[48]), .Q (SUM_out[48]));
  DFFRHQX1 \SUM_out_reg[47] (.RN (n_0), .CK (clk), .D
       (SUM_internal[47]), .Q (SUM_out[47]));
  DFFRHQX1 \SUM_out_reg[46] (.RN (n_0), .CK (clk), .D
       (SUM_internal[46]), .Q (SUM_out[46]));
  DFFRHQX1 \SUM_out_reg[45] (.RN (n_0), .CK (clk), .D
       (SUM_internal[45]), .Q (SUM_out[45]));
  DFFRHQX1 \SUM_out_reg[44] (.RN (n_0), .CK (clk), .D
       (SUM_internal[44]), .Q (SUM_out[44]));
  DFFRHQX1 \SUM_out_reg[43] (.RN (n_0), .CK (clk), .D
       (SUM_internal[43]), .Q (SUM_out[43]));
  DFFRHQX1 \SUM_out_reg[42] (.RN (n_0), .CK (clk), .D
       (SUM_internal[42]), .Q (SUM_out[42]));
  DFFRHQX1 \SUM_out_reg[41] (.RN (n_0), .CK (clk), .D
       (SUM_internal[41]), .Q (SUM_out[41]));
  DFFRHQX1 \SUM_out_reg[40] (.RN (n_0), .CK (clk), .D
       (SUM_internal[40]), .Q (SUM_out[40]));
  DFFRHQX1 \SUM_out_reg[39] (.RN (n_0), .CK (clk), .D
       (SUM_internal[39]), .Q (SUM_out[39]));
  DFFRHQX1 \SUM_out_reg[38] (.RN (n_0), .CK (clk), .D
       (SUM_internal[38]), .Q (SUM_out[38]));
  DFFRHQX1 \SUM_out_reg[37] (.RN (n_0), .CK (clk), .D
       (SUM_internal[37]), .Q (SUM_out[37]));
  DFFRHQX1 \SUM_out_reg[36] (.RN (n_0), .CK (clk), .D
       (SUM_internal[36]), .Q (SUM_out[36]));
  DFFRHQX1 \SUM_out_reg[35] (.RN (n_0), .CK (clk), .D
       (SUM_internal[35]), .Q (SUM_out[35]));
  DFFRHQX1 \SUM_out_reg[34] (.RN (n_0), .CK (clk), .D
       (SUM_internal[34]), .Q (SUM_out[34]));
  DFFRHQX1 \SUM_out_reg[33] (.RN (n_0), .CK (clk), .D
       (SUM_internal[33]), .Q (SUM_out[33]));
  DFFRHQX1 \SUM_out_reg[32] (.RN (n_0), .CK (clk), .D
       (SUM_internal[32]), .Q (SUM_out[32]));
  DFFRHQX1 \SUM_out_reg[31] (.RN (n_0), .CK (clk), .D
       (SUM_internal[31]), .Q (SUM_out[31]));
  DFFRHQX1 \SUM_out_reg[30] (.RN (n_0), .CK (clk), .D
       (SUM_internal[30]), .Q (SUM_out[30]));
  DFFRHQX1 \SUM_out_reg[29] (.RN (n_0), .CK (clk), .D
       (SUM_internal[29]), .Q (SUM_out[29]));
  DFFRHQX1 \SUM_out_reg[28] (.RN (n_0), .CK (clk), .D
       (SUM_internal[28]), .Q (SUM_out[28]));
  DFFRHQX1 \SUM_out_reg[27] (.RN (n_0), .CK (clk), .D
       (SUM_internal[27]), .Q (SUM_out[27]));
  DFFRHQX1 \SUM_out_reg[26] (.RN (n_0), .CK (clk), .D
       (SUM_internal[26]), .Q (SUM_out[26]));
  DFFRHQX1 \SUM_out_reg[25] (.RN (n_0), .CK (clk), .D
       (SUM_internal[25]), .Q (SUM_out[25]));
  DFFRHQX1 \SUM_out_reg[24] (.RN (n_0), .CK (clk), .D
       (SUM_internal[24]), .Q (SUM_out[24]));
  DFFRHQX1 \SUM_out_reg[23] (.RN (n_0), .CK (clk), .D
       (SUM_internal[23]), .Q (SUM_out[23]));
  DFFRHQX1 \SUM_out_reg[22] (.RN (n_0), .CK (clk), .D
       (SUM_internal[22]), .Q (SUM_out[22]));
  DFFRHQX1 \SUM_out_reg[21] (.RN (n_0), .CK (clk), .D
       (SUM_internal[21]), .Q (SUM_out[21]));
  DFFRHQX1 \SUM_out_reg[20] (.RN (n_0), .CK (clk), .D
       (SUM_internal[20]), .Q (SUM_out[20]));
  DFFRHQX1 \SUM_out_reg[19] (.RN (n_0), .CK (clk), .D
       (SUM_internal[19]), .Q (SUM_out[19]));
  DFFRHQX1 \SUM_out_reg[18] (.RN (n_0), .CK (clk), .D
       (SUM_internal[18]), .Q (SUM_out[18]));
  DFFRHQX1 \SUM_out_reg[17] (.RN (n_0), .CK (clk), .D
       (SUM_internal[17]), .Q (SUM_out[17]));
  DFFRHQX1 \SUM_out_reg[16] (.RN (n_0), .CK (clk), .D
       (SUM_internal[16]), .Q (SUM_out[16]));
  DFFRHQX1 \SUM_out_reg[15] (.RN (n_0), .CK (clk), .D
       (SUM_internal[15]), .Q (SUM_out[15]));
  DFFRHQX1 \SUM_out_reg[14] (.RN (n_0), .CK (clk), .D
       (SUM_internal[14]), .Q (SUM_out[14]));
  DFFRHQX1 \SUM_out_reg[13] (.RN (n_0), .CK (clk), .D
       (SUM_internal[13]), .Q (SUM_out[13]));
  DFFRHQX1 \SUM_out_reg[12] (.RN (n_0), .CK (clk), .D
       (SUM_internal[12]), .Q (SUM_out[12]));
  DFFRHQX1 \SUM_out_reg[11] (.RN (n_0), .CK (clk), .D
       (SUM_internal[11]), .Q (SUM_out[11]));
  DFFRHQX1 \SUM_out_reg[10] (.RN (n_0), .CK (clk), .D
       (SUM_internal[10]), .Q (SUM_out[10]));
  DFFRHQX1 \SUM_out_reg[9] (.RN (n_0), .CK (clk), .D (SUM_internal[9]),
       .Q (SUM_out[9]));
  DFFRHQX1 \SUM_out_reg[8] (.RN (n_0), .CK (clk), .D (SUM_internal[8]),
       .Q (SUM_out[8]));
  DFFRHQX1 \SUM_out_reg[7] (.RN (n_0), .CK (clk), .D (SUM_internal[7]),
       .Q (SUM_out[7]));
  DFFRHQX1 \SUM_out_reg[6] (.RN (n_0), .CK (clk), .D (SUM_internal[6]),
       .Q (SUM_out[6]));
  DFFRHQX1 \SUM_out_reg[5] (.RN (n_0), .CK (clk), .D (SUM_internal[5]),
       .Q (SUM_out[5]));
  DFFRHQX1 \SUM_out_reg[4] (.RN (n_0), .CK (clk), .D (SUM_internal[4]),
       .Q (SUM_out[4]));
  DFFRHQX1 \SUM_out_reg[3] (.RN (n_0), .CK (clk), .D (SUM_internal[3]),
       .Q (SUM_out[3]));
  DFFRHQX1 \SUM_out_reg[2] (.RN (n_0), .CK (clk), .D (SUM_internal[2]),
       .Q (SUM_out[2]));
  DFFRHQX1 \SUM_out_reg[1] (.RN (n_0), .CK (clk), .D (SUM_internal[1]),
       .Q (SUM_out[1]));
  DFFRHQX1 \SUM_out_reg[0] (.RN (n_0), .CK (clk), .D (SUM_internal[0]),
       .Q (SUM_out[0]));
  DFFRHQX1 \A_reg[60] (.RN (n_0), .CK (clk), .D (A_in[60]), .Q (A[60]));
  DFFRHQX1 \B_reg[30] (.RN (n_0), .CK (clk), .D (B_in[30]), .Q (B[30]));
  DFFRHQX1 \A_reg[28] (.RN (n_0), .CK (clk), .D (A_in[28]), .Q (A[28]));
  DFFRHQX1 \A_reg[62] (.RN (n_0), .CK (clk), .D (A_in[62]), .Q (A[62]));
  DFFRHQX1 \A_reg[26] (.RN (n_0), .CK (clk), .D (A_in[26]), .Q (A[26]));
  DFFRHQX1 \A_reg[24] (.RN (n_0), .CK (clk), .D (A_in[24]), .Q (A[24]));
  DFFRHQX1 \B_reg[22] (.RN (n_0), .CK (clk), .D (B_in[22]), .Q (B[22]));
  DFFRHQX1 \A_reg[20] (.RN (n_0), .CK (clk), .D (A_in[20]), .Q (A[20]));
  DFFRHQX1 \A_reg[58] (.RN (n_0), .CK (clk), .D (A_in[58]), .Q (A[58]));
  DFFRHQX1 \B_reg[18] (.RN (n_0), .CK (clk), .D (B_in[18]), .Q (B[18]));
  DFFRHQX1 \B_reg[16] (.RN (n_0), .CK (clk), .D (B_in[16]), .Q (B[16]));
  DFFRHQX1 \B_reg[56] (.RN (n_0), .CK (clk), .D (B_in[56]), .Q (B[56]));
  DFFRHQX1 \B_reg[14] (.RN (n_0), .CK (clk), .D (B_in[14]), .Q (B[14]));
  DFFRHQX1 \B_reg[12] (.RN (n_0), .CK (clk), .D (B_in[12]), .Q (B[12]));
  DFFRHQX1 \B_reg[54] (.RN (n_0), .CK (clk), .D (B_in[54]), .Q (B[54]));
  DFFRHQX1 \B_reg[10] (.RN (n_0), .CK (clk), .D (B_in[10]), .Q (B[10]));
  DFFRHQX1 \B_reg[8] (.RN (n_0), .CK (clk), .D (B_in[8]), .Q (B[8]));
  DFFRHQX1 \B_reg[6] (.RN (n_0), .CK (clk), .D (B_in[6]), .Q (B[6]));
  DFFRHQX1 \B_reg[4] (.RN (n_0), .CK (clk), .D (B_in[4]), .Q (B[4]));
  DFFRHQX1 \B_reg[50] (.RN (n_0), .CK (clk), .D (B_in[50]), .Q (B[50]));
  DFFRHQX1 \B_reg[2] (.RN (n_0), .CK (clk), .D (B_in[2]), .Q (B[2]));
  DFFRHQX1 \B_reg[46] (.RN (n_0), .CK (clk), .D (B_in[46]), .Q (B[46]));
  DFFRHQX1 \B_reg[40] (.RN (n_0), .CK (clk), .D (B_in[40]), .Q (B[40]));
  DFFRHQX1 Cin_reg(.RN (n_0), .CK (clk), .D (Cin_in), .Q (Cin));
  DFFRHQX1 \B_reg[0] (.RN (n_0), .CK (clk), .D (B_in[0]), .Q (B[0]));
  DFFRHQX1 \B_reg[48] (.RN (n_0), .CK (clk), .D (B_in[48]), .Q (B[48]));
  DFFRHQX1 \B_reg[42] (.RN (n_0), .CK (clk), .D (B_in[42]), .Q (B[42]));
  DFFRHQX1 \A_reg[63] (.RN (n_0), .CK (clk), .D (A_in[63]), .Q (A[63]));
  DFFRHQX1 \B_reg[63] (.RN (n_0), .CK (clk), .D (B_in[63]), .Q (B[63]));
  DFFRHQX1 \B_reg[62] (.RN (n_0), .CK (clk), .D (B_in[62]), .Q (B[62]));
  DFFRHQX1 \A_reg[61] (.RN (n_0), .CK (clk), .D (A_in[61]), .Q (A[61]));
  DFFRHQX1 \B_reg[61] (.RN (n_0), .CK (clk), .D (B_in[61]), .Q (B[61]));
  DFFRHQX1 \B_reg[32] (.RN (n_0), .CK (clk), .D (B_in[32]), .Q (B[32]));
  DFFRHQX1 \B_reg[60] (.RN (n_0), .CK (clk), .D (B_in[60]), .Q (B[60]));
  DFFRHQX1 \A_reg[59] (.RN (n_0), .CK (clk), .D (A_in[59]), .Q (A[59]));
  DFFRHQX1 \B_reg[59] (.RN (n_0), .CK (clk), .D (B_in[59]), .Q (B[59]));
  DFFRHQX1 \B_reg[58] (.RN (n_0), .CK (clk), .D (B_in[58]), .Q (B[58]));
  DFFRHQX1 \B_reg[57] (.RN (n_0), .CK (clk), .D (B_in[57]), .Q (B[57]));
  DFFRHQX1 \A_reg[57] (.RN (n_0), .CK (clk), .D (A_in[57]), .Q (A[57]));
  DFFRHQX1 \A_reg[56] (.RN (n_0), .CK (clk), .D (A_in[56]), .Q (A[56]));
  DFFRHQX1 \B_reg[55] (.RN (n_0), .CK (clk), .D (B_in[55]), .Q (B[55]));
  DFFRHQX1 \A_reg[55] (.RN (n_0), .CK (clk), .D (A_in[55]), .Q (A[55]));
  DFFRHQX1 \A_reg[54] (.RN (n_0), .CK (clk), .D (A_in[54]), .Q (A[54]));
  DFFRHQX1 \B_reg[53] (.RN (n_0), .CK (clk), .D (B_in[53]), .Q (B[53]));
  DFFRHQX1 \A_reg[53] (.RN (n_0), .CK (clk), .D (A_in[53]), .Q (A[53]));
  DFFRHQX1 \B_reg[52] (.RN (n_0), .CK (clk), .D (B_in[52]), .Q (B[52]));
  DFFRHQX1 \A_reg[52] (.RN (n_0), .CK (clk), .D (A_in[52]), .Q (A[52]));
  DFFRHQX1 \B_reg[51] (.RN (n_0), .CK (clk), .D (B_in[51]), .Q (B[51]));
  DFFRHQX1 \A_reg[51] (.RN (n_0), .CK (clk), .D (A_in[51]), .Q (A[51]));
  DFFRHQX1 \A_reg[50] (.RN (n_0), .CK (clk), .D (A_in[50]), .Q (A[50]));
  DFFRHQX1 \B_reg[49] (.RN (n_0), .CK (clk), .D (B_in[49]), .Q (B[49]));
  DFFRHQX1 \A_reg[49] (.RN (n_0), .CK (clk), .D (A_in[49]), .Q (A[49]));
  DFFRHQX1 \A_reg[48] (.RN (n_0), .CK (clk), .D (A_in[48]), .Q (A[48]));
  DFFRHQX1 \B_reg[47] (.RN (n_0), .CK (clk), .D (B_in[47]), .Q (B[47]));
  DFFRHQX1 \A_reg[47] (.RN (n_0), .CK (clk), .D (A_in[47]), .Q (A[47]));
  DFFRHQX1 \A_reg[46] (.RN (n_0), .CK (clk), .D (A_in[46]), .Q (A[46]));
  DFFRHQX1 \B_reg[45] (.RN (n_0), .CK (clk), .D (B_in[45]), .Q (B[45]));
  DFFRHQX1 \A_reg[45] (.RN (n_0), .CK (clk), .D (A_in[45]), .Q (A[45]));
  DFFRHQX1 \B_reg[44] (.RN (n_0), .CK (clk), .D (B_in[44]), .Q (B[44]));
  DFFRHQX1 \A_reg[44] (.RN (n_0), .CK (clk), .D (A_in[44]), .Q (A[44]));
  DFFRHQX1 \B_reg[43] (.RN (n_0), .CK (clk), .D (B_in[43]), .Q (B[43]));
  DFFRHQX1 \A_reg[43] (.RN (n_0), .CK (clk), .D (A_in[43]), .Q (A[43]));
  DFFRHQX1 \A_reg[42] (.RN (n_0), .CK (clk), .D (A_in[42]), .Q (A[42]));
  DFFRHQX1 \B_reg[41] (.RN (n_0), .CK (clk), .D (B_in[41]), .Q (B[41]));
  DFFRHQX1 \B_reg[36] (.RN (n_0), .CK (clk), .D (B_in[36]), .Q (B[36]));
  DFFRHQX1 \A_reg[40] (.RN (n_0), .CK (clk), .D (A_in[40]), .Q (A[40]));
  DFFRHQX1 \B_reg[39] (.RN (n_0), .CK (clk), .D (B_in[39]), .Q (B[39]));
  DFFRHQX1 \A_reg[39] (.RN (n_0), .CK (clk), .D (A_in[39]), .Q (A[39]));
  DFFRHQX1 \B_reg[34] (.RN (n_0), .CK (clk), .D (B_in[34]), .Q (B[34]));
  DFFRHQX1 \A_reg[38] (.RN (n_0), .CK (clk), .D (A_in[38]), .Q (A[38]));
  DFFRHQX1 \B_reg[37] (.RN (n_0), .CK (clk), .D (B_in[37]), .Q (B[37]));
  DFFRHQX1 \A_reg[37] (.RN (n_0), .CK (clk), .D (A_in[37]), .Q (A[37]));
  DFFRHQX1 \A_reg[36] (.RN (n_0), .CK (clk), .D (A_in[36]), .Q (A[36]));
  DFFRHQX1 \A_reg[35] (.RN (n_0), .CK (clk), .D (A_in[35]), .Q (A[35]));
  DFFRHQX1 \B_reg[35] (.RN (n_0), .CK (clk), .D (B_in[35]), .Q (B[35]));
  DFFRHQX1 \A_reg[34] (.RN (n_0), .CK (clk), .D (A_in[34]), .Q (A[34]));
  DFFRHQX1 \B_reg[33] (.RN (n_0), .CK (clk), .D (B_in[33]), .Q (B[33]));
  DFFRHQX1 \A_reg[33] (.RN (n_0), .CK (clk), .D (A_in[33]), .Q (A[33]));
  DFFRHQX1 \A_reg[32] (.RN (n_0), .CK (clk), .D (A_in[32]), .Q (A[32]));
  DFFRHQX1 \B_reg[31] (.RN (n_0), .CK (clk), .D (B_in[31]), .Q (B[31]));
  DFFRHQX1 \A_reg[31] (.RN (n_0), .CK (clk), .D (A_in[31]), .Q (A[31]));
  DFFRHQX1 \A_reg[30] (.RN (n_0), .CK (clk), .D (A_in[30]), .Q (A[30]));
  DFFRHQX1 \A_reg[29] (.RN (n_0), .CK (clk), .D (A_in[29]), .Q (A[29]));
  DFFRHQX1 \B_reg[29] (.RN (n_0), .CK (clk), .D (B_in[29]), .Q (B[29]));
  DFFRHQX1 \B_reg[28] (.RN (n_0), .CK (clk), .D (B_in[28]), .Q (B[28]));
  DFFRHQX1 \A_reg[27] (.RN (n_0), .CK (clk), .D (A_in[27]), .Q (A[27]));
  DFFRHQX1 \B_reg[27] (.RN (n_0), .CK (clk), .D (B_in[27]), .Q (B[27]));
  DFFRHQX1 \B_reg[26] (.RN (n_0), .CK (clk), .D (B_in[26]), .Q (B[26]));
  DFFRHQX1 \A_reg[25] (.RN (n_0), .CK (clk), .D (A_in[25]), .Q (A[25]));
  DFFRHQX1 \B_reg[25] (.RN (n_0), .CK (clk), .D (B_in[25]), .Q (B[25]));
  DFFRHQX1 \B_reg[24] (.RN (n_0), .CK (clk), .D (B_in[24]), .Q (B[24]));
  DFFRHQX1 \B_reg[23] (.RN (n_0), .CK (clk), .D (B_in[23]), .Q (B[23]));
  DFFRHQX1 \A_reg[23] (.RN (n_0), .CK (clk), .D (A_in[23]), .Q (A[23]));
  DFFRHQX1 \A_reg[22] (.RN (n_0), .CK (clk), .D (A_in[22]), .Q (A[22]));
  DFFRHQX1 \B_reg[21] (.RN (n_0), .CK (clk), .D (B_in[21]), .Q (B[21]));
  DFFRHQX1 \A_reg[21] (.RN (n_0), .CK (clk), .D (A_in[21]), .Q (A[21]));
  DFFRHQX1 \B_reg[20] (.RN (n_0), .CK (clk), .D (B_in[20]), .Q (B[20]));
  DFFRHQX1 \B_reg[19] (.RN (n_0), .CK (clk), .D (B_in[19]), .Q (B[19]));
  DFFRHQX1 \A_reg[19] (.RN (n_0), .CK (clk), .D (A_in[19]), .Q (A[19]));
  DFFRHQX1 \A_reg[18] (.RN (n_0), .CK (clk), .D (A_in[18]), .Q (A[18]));
  DFFRHQX1 \B_reg[17] (.RN (n_0), .CK (clk), .D (B_in[17]), .Q (B[17]));
  DFFRHQX1 \A_reg[17] (.RN (n_0), .CK (clk), .D (A_in[17]), .Q (A[17]));
  DFFRHQX1 \A_reg[16] (.RN (n_0), .CK (clk), .D (A_in[16]), .Q (A[16]));
  DFFRHQX1 \B_reg[15] (.RN (n_0), .CK (clk), .D (B_in[15]), .Q (B[15]));
  DFFRHQX1 \A_reg[15] (.RN (n_0), .CK (clk), .D (A_in[15]), .Q (A[15]));
  DFFRHQX1 \A_reg[14] (.RN (n_0), .CK (clk), .D (A_in[14]), .Q (A[14]));
  DFFRHQX1 \B_reg[13] (.RN (n_0), .CK (clk), .D (B_in[13]), .Q (B[13]));
  DFFRHQX1 \A_reg[13] (.RN (n_0), .CK (clk), .D (A_in[13]), .Q (A[13]));
  DFFRHQX1 \A_reg[12] (.RN (n_0), .CK (clk), .D (A_in[12]), .Q (A[12]));
  DFFRHQX1 \A_reg[11] (.RN (n_0), .CK (clk), .D (A_in[11]), .Q (A[11]));
  DFFRHQX1 \B_reg[11] (.RN (n_0), .CK (clk), .D (B_in[11]), .Q (B[11]));
  DFFRHQX1 \A_reg[10] (.RN (n_0), .CK (clk), .D (A_in[10]), .Q (A[10]));
  DFFRHQX1 \B_reg[9] (.RN (n_0), .CK (clk), .D (B_in[9]), .Q (B[9]));
  DFFRHQX1 \A_reg[9] (.RN (n_0), .CK (clk), .D (A_in[9]), .Q (A[9]));
  DFFRHQX1 \A_reg[8] (.RN (n_0), .CK (clk), .D (A_in[8]), .Q (A[8]));
  DFFRHQX1 \B_reg[7] (.RN (n_0), .CK (clk), .D (B_in[7]), .Q (B[7]));
  DFFRHQX1 \A_reg[7] (.RN (n_0), .CK (clk), .D (A_in[7]), .Q (A[7]));
  DFFRHQX1 \A_reg[6] (.RN (n_0), .CK (clk), .D (A_in[6]), .Q (A[6]));
  DFFRHQX1 \B_reg[5] (.RN (n_0), .CK (clk), .D (B_in[5]), .Q (B[5]));
  DFFRHQX1 \A_reg[5] (.RN (n_0), .CK (clk), .D (A_in[5]), .Q (A[5]));
  DFFRHQX1 \A_reg[4] (.RN (n_0), .CK (clk), .D (A_in[4]), .Q (A[4]));
  DFFRHQX1 \B_reg[3] (.RN (n_0), .CK (clk), .D (B_in[3]), .Q (B[3]));
  DFFRHQX1 \A_reg[3] (.RN (n_0), .CK (clk), .D (A_in[3]), .Q (A[3]));
  DFFRHQX1 \A_reg[2] (.RN (n_0), .CK (clk), .D (A_in[2]), .Q (A[2]));
  DFFRHQX1 \B_reg[1] (.RN (n_0), .CK (clk), .D (B_in[1]), .Q (B[1]));
  DFFRHQX1 \A_reg[1] (.RN (n_0), .CK (clk), .D (A_in[1]), .Q (A[1]));
  DFFRHQX1 \A_reg[0] (.RN (n_0), .CK (clk), .D (A_in[0]), .Q (A[0]));
  DFFRHQX1 \B_reg[38] (.RN (n_0), .CK (clk), .D (B_in[38]), .Q (B[38]));
  DFFRHQX1 \A_reg[41] (.RN (n_0), .CK (clk), .D (A_in[41]), .Q (A[41]));
  INVXL g201(.A (reset), .Y (n_0));
endmodule

